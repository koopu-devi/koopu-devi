import datetime
class LibraryItem:
    def __init__(self, title, author, category, item_type):
        self.title = title
        self.author = author
        self.category = category
        self.item_type = item_type
        self.is_checked_out = False
        self.due_date = None

    def __str__(self):
        return f"{self.item_type}: '{self.title}' by {self.author} (Category: {self.category})"

class Library:
    def __init__(self):
        self.items = []

    def add_item(self, title, author, category, item_type):
        new_item = LibraryItem(title, author, category, item_type)
        self.items.append(new_item)
        print(f"Added {new_item}")

    def search_items(self, query, field):
        results = []
        for item in self.items:
            if query.lower() in getattr(item, field).lower():
                results.append(item)
        return results

    def checkout_item(self, title):
        for item in self.items:
            if item.title.lower() == title.lower() and not item.is_checked_out:
                item.is_checked_out = True
                item.due_date = datetime.date.today() + datetime.timedelta(days=14)  # 2 weeks loan
                print(f"Checked out '{item.title}'. Due date: {item.due_date}")
                return
        print(f"Item '{title}' not available for checkout.")

    def return_item(self, title):
        for item in self.items:
            if item.title.lower() == title.lower() and item.is_checked_out:
                item.is_checked_out = False
                overdue_days = (datetime.date.today() - item.due_date).days
                item.due_date = None
                if overdue_days > 0:
                    fine = overdue_days * 1  # $1 per day overdue
                    print(f"Returned '{item.title}' late. Fine: ${fine:.2f}")
                else:
                    print(f"Returned '{item.title}' on time.")
                return
        print(f"Item '{title}' not found or not checked out.")

    def list_items(self):
        if not self.items:
            print("Library has no items.")
        else:
            for item in self.items:
                status = "Checked out" if item.is_checked_out else "Available"
                print(f"{item} - Status: {status}")
if __name__ == "__main__":
    library = Library()
    library.add_item("The Great Gatsby", "F. Scott Fitzgerald", "Fiction", "Book")
    library.add_item("National Geographic", "Various", "Education", "Magazine")
    library.add_item("Inception", "Christopher Nolan", "Sci-Fi", "DVD")
    print("\nSearch Results:")
    search_results = library.search_items("Great", "title")
    for result in search_results:
        print(result)
    print("\nCheckout:")
    library.checkout_item("The Great Gatsby")
    library.list_items()
    print("\nReturn:")
    library.return_item("The Great Gatsby")
    library.list_items()
    print("\nAll Library Items:")
    library.list_items()
